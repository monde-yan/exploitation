package DeplacementPresidentFunction;

import lombok.RequiredArgsConstructor;
import org.apache.parquet.hadoop.util.counters.ICounter;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.example.DeplacementPresident;
import scala.collection.parallel.ParIterableLike;

import java.util.function.Function;

import static org.apache.spark.sql.functions.*;


public class DeplacementPresidentAgregation implements Function<Dataset<DeplacementPresident>, Dataset<Row>> {
    @Override
    public Dataset<Row> apply(Dataset<DeplacementPresident> rowDataset) {
       return rowDataset.groupBy("fonction").agg(count("personne").as("nb"));

        //return deplacementPresidentDataset.groupByKey(DeplacementPresident).reduceGroups(count());

    }


}
