package DeplacementPresidentFunction;

import org.apache.spark.annotation.Stable;
import org.apache.spark.api.java.function.MapFunction;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Encoder;
import org.apache.spark.sql.Encoders;
import org.apache.spark.sql.KeyValueGroupedDataset;
import org.apache.spark.sql;

import java.util.function.Function;

public class AddjoinStact implements Function<Dataset<Addjoin>, Dataset<Stact>> {
    @Stable
    @Override
    public Dataset<Stact> apply(Dataset<Addjoin> addjoinDataset) {

        MappAddjoin mappAddjoin = new MappAddjoin();
        Dataset<Stact> stactDataset = addjoinDataset.map(mappAddjoin, Encoders.bean(Stact.class));
        MappFunction mappFunction = new MappFunction();

        KeyValueGroupedDataset<String, Addjoin> buckets = addjoinDataset.groupByKey(mappFunction, Encoders.STRING());
        Encoder<Stact> encoders = Encoders.bean(Stact.class);

        buckets.mapValues(mappAddjoin, Encoders.bean(Dataset<Stact>));
        return stactDataset;
    }
}
